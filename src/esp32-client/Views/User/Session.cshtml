@{
    ViewData["Title"] = "User session";
    
    string token = ViewBag.Token;
    int userId = ViewBag.UserId;
    
    // Do not get current session
    var userSession = await _userSessionService.GetByUserId(userId);
    var sessions = userSession.Where(s => s.Token != token).ToList();

    var currSession = userSession.Where(s => s.Token == token).FirstOrDefault();
    var displayCurrToken = new string(currSession?.Token.ToCharArray().TakeLast(50).ToArray());
} 

<h4 class="setting-header">User session</h4>

<table class="normal-table table-hover">
    <thead>
        <th colspan="100%">
            <div style="display: flex;justify-content: space-between;">
                <div>
                    Session table
                </div>
                <div>
                    @using (Html.BeginForm("DeleteAllSession", "User", FormMethod.Post, new
                    {
                        @enctype = "multipart/form-data"
                    }))
                    {
                        <input type="number" id="userId" name="userId" value='@userId' style="display: none;">
                        <input type="text" id="token" name="token" value='@token' style="display: none;">
                        <input type="submit" class="btn btn-danger" value="Delete All">
                    }
                </div>
            </div>
        </th>
    </thead>
    <thead>
        <tr>
            <th>Token</th>
            <th>Expired time</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td class="token" onclick="showContextMenu(event, '@currSession?.Token')">...@displayCurrToken</td>
            <td>@currSession?.ExpiredTime.AddHours(7)</td>
            <td></td>
        </tr>
        @foreach (var item in sessions)
        {
            var displayToken = new string(item.Token.ToCharArray().TakeLast(50).ToArray());
            <tr>
                <td class="token" onclick="showContextMenu(event, '@item.Token')">...@displayToken</td>
                <td>@item.ExpiredTime.AddHours(7)</td>
                <td>
                    <div style="display: flex; justify-content: space-around; align-items: center;">
                        <div id="delete">
                            <button type="button" class="btn btn-danger btn-sm" style="color: white;"
                                onclick="openDeletePopup('deleteSession', '@item.Id')">
                                <i class="fa fa-light fa-trash" style="color: white;"></i>
                                Delete
                            </button>
                        </div>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>


<div class="popup-container" id="deleteSession">
    <div class="popup-dialog">
        <div class="popup-content">
            <span class="close-button" onclick="closePopup('deleteSession')">&times;</span>
            <h2>Delete session</h2>
            @using (Html.BeginForm("DeleteSession", "User", FormMethod.Post, new
            {
                @enctype = "multipart/form-data"
            }))
            {
                <div class="mb-3">
                    <label for="sessionId" class="form-label">Do you want to delete this session?</label>
                    <input type="number" class="form-control" id="sessionId" name="sessionId" style="display: none;">
                </div>
                <div class="d-grid">
                    <input type="submit" class="btn btn-danger" value="Delete">
                </div>
            }
        </div>
    </div>
</div>

<div class="contextMenu" id="contextMenu" style="display: none; position: absolute; background-color: white; border: 1px solid #ccc;">
    <div onclick="copyToClipBoard()" style="cursor: copy;">Copy<span id="save-token" style="display: none;"></span></div>
</div>

@section Scripts{
    <script>

        var token = document.getElementsByClassName('token');
        var contextMenu = document.getElementById('contextMenu');
        
        function showContextMenu(event, token){
            event.preventDefault();
            contextMenu.style.display = "block";
            contextMenu.style.left = event.clientX + "px";
            contextMenu.style.top = event.clientY + "px";
            $("#save-token").text(token);
        }

        document.addEventListener('click', function(event) {
            if (!$(event.target).hasClass('token') && !contextMenu.contains(event.target)) {
                contextMenu.style.display = 'none';
            }
        });

        function copyToClipBoard(){
            var saveToken = document.getElementById('save-token').textContent;
            console.log(saveToken);
            navigator.clipboard.writeText(saveToken);

            contextMenu.style.display = 'none';
        }
    </script>
    <script>
        function openDeletePopup(id, sessionId) {

            var pSessionId = document.querySelector('[id=deleteSession] [id=sessionId]');
            pSessionId.value = sessionId;

            document.getElementById(id).style.display = "block";
        }
    </script>
}
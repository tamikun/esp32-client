@using esp32_client.Controllers;
@using Newtonsoft.Json;
@model ServerModelDetail

@{
    var listStaticIp = await ListServer.GetInstance(_clientService).GetStaticList();

    @await Html.PartialAsync("~/Views/Components/ListServer.cshtml",listStaticIp)

    var serverName = listStaticIp.Where(s => s.IpAddress == Model.IpAddress).Select(s => s.ServerName).FirstOrDefault();

    serverName = string.IsNullOrEmpty(serverName) ? "undefined" : serverName;

    <div class="alert-message">
        @if (TempData["AlertMessage"] is not null)
        {
            var alertModel = JsonConvert.DeserializeObject<List<AlertModel>>(TempData["AlertMessage"].ToString());
            foreach (var alert in alertModel)
            {
                @await Html.PartialAsync("~/Views/Components/Alert.cshtml", alert)
            }
        }
    </div>

    <div class="tab-content">
        <div id=@Model.IpAddress style="display: block;">
            <h2>@Model.IpAddress - @serverName</h2>
            <br>

            @using (Html.BeginForm("Upload", "Server", FormMethod.Post, new { @enctype = "multipart/form-data" }))
            {

                <table class="upload-table">
                    <tr>
                        <td>
                            <label for="newFile">Upload a file</label>
                        </td>
                        <td colspan="2">
                            <input id="newFile" type="file" name="RequestFileModel.File" onchange="setPath('@Model.IpAddress')"
                                style="width:100%;" />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label for="filePath">Set path on server</label>
                        </td>
                        <td>
                            @* <input id="filePath" type="text" style="width:100%;"> *@
                            @* @Html.EditorFor(s => s.RequestFileModel.FilePath) *@
                            @Html.EditorFor(s => s.RequestFileModel.FilePath, new { htmlAttributes = new { id = "filePath",
                    style = "width:100%;" } })
                        </td>
                        <td>
                            <input type="submit" value="Upload" />
                        </td>
                    </tr>

                </table>
                @Html.HiddenFor(s => s.IpAddress)
                @Html.HiddenFor(s => s.SubDirectory)
            }

            <br>


            @{
                var getUrl = $"http://{@Model.IpAddress}/";
                if (!string.IsNullOrEmpty(Model.SubDirectory))
                {
                    getUrl = $"http://{@Model.IpAddress}/{@Model.SubDirectory}/";
                }

                var listFile = await _clientService.GetListEspFile(getUrl);

                if (listFile.Count > 0)
                {
                    @* Model.ListDeleteFile = new List<ServerModelDetail>(); *@
                    Model.ListDeleteFile = listFile.Select(
                    s => new SelectedDeleteFileServerModel()
                {
                    IpAddress = Model.IpAddress,
                    Folder = Model.SubDirectory,
                    FileName = s.FileName,
                    IsSelected = false
                }).ToList();

                    @using (Html.BeginForm("Delete", "Server", FormMethod.Post, new { @enctype = "multipart/form-data" }))
                    {
                        <table class="normal">
                            <col width="800px" />
                            <col width="300px" />
                            <col width="300px" />
                            <col width="100px" />
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Type</th>
                                    <th>Bytes</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>

                                @{
                                    var actionDetail = nameof(@ServerController.Detail);
                                }

                                @if (!string.IsNullOrEmpty(Model.SubDirectory))
                                {
                                    string backDirString = "";
                                    var backDir = Model.SubDirectory.Split('/').ToList();
                                    if (backDir.Count > 1)
                                    {
                                        backDirString = string.Join('/', backDir.Take(backDir.Count - 1));
                                    }

                                    <td colspan="4"><a
                                            href="@Url.Action(@actionDetail, new { ipAddress =  @Model.IpAddress, subDirectory =  @backDirString})">...</a>
                                    </td>
                                }

                                @* @foreach (var file in listFile) *@
                                @for (int i = 0; i < listFile.Count; i++)
                                {

                                    @* var newUrl = Model.IpAddress + "/" + file.FileName; *@

                                    var subDir = "";
                                    if (!string.IsNullOrEmpty(Model.SubDirectory))
                                    {
                                        subDir = Model.SubDirectory + "/" + listFile[i].FileName;
                                    }
                                    else
                                    {
                                        subDir = listFile[i].FileName;
                                    }

                                    if (listFile[i].FileType == "directory")
                                    {
                                        <tr>
                                            <td><a
                                                    href="@Url.Action(@actionDetail, new { ipAddress =  @Model.IpAddress, subDirectory =  @subDir})">
                                                    @listFile[i].FileName
                                                </a>
                                            </td>
                                            <td>@listFile[i].FileType</td>
                                            <td>@listFile[i].FileSize</td>
                                            <td>
                                                @Html.CheckBoxFor(s=> s.ListDeleteFile[i].IsSelected)
                                            </td>
                                        </tr>
                                    }
                                    else
                                    {
                                        var newUrl = "http://" + @Model.IpAddress + "/" + listFile[i].FileName;
                                        if (!string.IsNullOrEmpty(Model.SubDirectory))
                                        {
                                            newUrl = "http://" + @Model.IpAddress + "/" + Model.SubDirectory + "/" + listFile[i].FileName;
                                        }

                                        <tr>
                                            <td><a href='@Url.Action("DownloadFile", "OpenApi", new {url = @newUrl})'>@listFile[i].FileName</a>
                                            </td>
                                            <td>@listFile[i].FileType</td>
                                            <td>@listFile[i].FileSize</td>
                                            <td>
                                                @* <a class="button-link"
                        href="@Url.Action(@actionDelete, new { ipAddress = @Model.IpAddress, subDirectory =
                        @Model.SubDirectory, fileName = @listFile[i].FileName})">Delete</a> *@
                                                @Html.CheckBoxFor(s=> s.ListDeleteFile[i].IsSelected)
                                            </td>
                                        </tr>
                                    }
                                    @Html.HiddenFor(s=> s.ListDeleteFile[i].IpAddress)
                                    @Html.HiddenFor(s=> s.ListDeleteFile[i].Folder)
                                    @Html.HiddenFor(s=> s.ListDeleteFile[i].FileName)
                                }
                            </tbody>
                        </table>
                        @Html.HiddenFor(s => s.IpAddress)
                        @Html.HiddenFor(s => s.SubDirectory)
                        <div class="submit-delete">
                            <input type="submit" value="Delete" />
                        </div>
                    }
                }
                else
                {
                    var serverPageSource = await _clientService.GetAsyncApi(getUrl, false);

                    <div id="server-content">@serverPageSource</div>
                }
            }
        </div>
    </div>
}

@section Scripts{
    <script>

        var toggles = document.querySelectorAll('.toggle');

        toggles.forEach(function (toggle) {
            toggle.addEventListener('click', function () {
                var parentLi = toggle.parentNode;
                var nestedUl = parentLi.querySelector('ul');

                if (nestedUl.style.display === 'none') {
                    nestedUl.style.display = 'block';
                    toggle.textContent = '[-]';
                } else {
                    nestedUl.style.display = 'none';
                    toggle.textContent = '[+]';
                }
            });
        });

        function setPath(ipAddress) {

            var default_path = document.querySelector(`.tab-content [id="${ipAddress}"] [id="newFile"]`).files[0].name;

            document.querySelector(`.tab-content [id="${ipAddress}"] [id="filePath"]`).value = default_path;
        }

    </script>

    <style>
        .submit-delete {
            text-align: right;
            margin-top: 10px;
        }
    </style>
}
@model FileSystemRequestModel

@{
    ViewData["Title"] = "System";
    var files = await _fileService.GetFiles(Model?.Folder);
    var folders = await _fileService.GetFolders(Model?.Folder);
    var listSplitFolder = Model?.Folder?.Split('/').Where(s => !string.IsNullOrEmpty(s));

    bool defaultPath = Model?.Folder == _settings.FileDataDirectory;

}

<div style="margin-right: 10px;">

    @using (Html.BeginForm("Upload", "System", FormMethod.Post, new { @enctype = "multipart/form-data" }))
    {
        <div style="margin-bottom: 10px; margin-top: 10px;">
            <table class="upload-table">
                <tr>
                    <td colspan="2">
                        <input id="newFiles" type="file" name="ListUploadFile" style="width:100%;" multiple />
                        @Html.HiddenFor(s=> s.Folder)
                    </td>
                </tr>
                <tr>
                    <td>
                        <input type="submit" value="Upload" />
                    </td>
                </tr>
            </table>
        </div>
    }

    @using (Html.BeginForm("Delete", "System", FormMethod.Post, new { @enctype = "multipart/form-data" }))
    {
        <table class="normal table-hover" style="width: 100%; margin-left: 5px;">
            <thead>
                <tr>
                    @if (!defaultPath)
                    {
                        var displayPath = string.Join('/', listSplitFolder.Skip(2));
                        <th colspan="3">./@displayPath/</th>
                    }
                    else
                    {
                        <th colspan="3">./</th>
                    }
                    <th colspan="1" style="text-align:center;">
                        <div style="display: flex;">
                            <input type="text" id="addFolderInput" placeholder="NewFolder">

                            <a href="@Url.Action("AddFolder", new { directory = @Model.Folder, folderName = "__FOLDERNAME__" })"
                                id="addFolderLink">

                                <i class="fa fa-folder-plus normal-display-loading"
                                    style="font-size:20px;color:#fbcf4b;cursor:pointer;margin-left:10px;align-self:center;"></i>
                            </a>

                        </div>
                    </th>
                </tr>
            </thead>
            <tbody>

                @if (!defaultPath)
                {
                    var backPath = "/" + string.Join('/', listSplitFolder.Take(listSplitFolder.Count() - 1)) + "/";
                    <tr>
                        <td colspan="3">
                            <a href="@Url.Action("Index", new { folder = @backPath})">
                                <i class="fa fa-backward"></i>
                            </a>
                        </td>
                        <td>
                            <input type="checkbox" onclick="checkAll()">
                        </td>
                    </tr>
                }

                @if (folders.Count > 0)
                {
                    for (int i = 0; i < folders.Count; i++)
                    {
                        Model.ListDeleteFile.Add(new SelectedDataFileModel { FilePath = folders[i].FilePath, IsSelected = false });

                        var folderName = @folders[i]?.FilePath?.Split('/').LastOrDefault();
                        <tr>
                            <td colspan="3">
                                <a href="@Url.Action("Index", new { folder = @folders[i]?.FilePath})">
                                    <i class="fa fa-folder toggle-folder" style="font-size:18px;color:#fbcf4b;cursor:pointer;"></i>
                                    <span><strong>@folderName</strong></span>
                                </a>
                            </td>
                            <td>
                                @Html.CheckBoxFor(s=> s.ListDeleteFile[i].IsSelected)
                                @Html.HiddenFor(s=> s.ListDeleteFile[i].FilePath)
                            </td>
                        </tr>
                    }
                }

                @if (files.Count > 0)
                {
                    for (int i = 0; i < files.Count; i++)
                    {
                        Model.ListDeleteFile.Add(new SelectedDataFileModel { FilePath = files[i].FilePath, IsSelected = false });

                        <tr>
                            <td colspan="3">
                                <i class="fa fa-file" style="font-size:15px;color:#82a6c9;"></i>
                                <span><strong>@files[i]?.FilePath?.Split('/').LastOrDefault()</strong></span>
                            </td>
                            <td>
                                @Html.CheckBoxFor(s=> s.ListDeleteFile[i + folders.Count].IsSelected)
                                @Html.HiddenFor(s=> s.ListDeleteFile[i + folders.Count].FilePath)
                            </td>
                        </tr>
                    }
                }

            </tbody>
        </table>

        <div class="submit-delete">
            @Html.HiddenFor(s=> s.Folder)
            <input type="submit" value="Delete" />
        </div>
    }
</div>

@section Scripts{
    <script>
        // Get the elements by their IDs
        const addFolderInput = document.getElementById('addFolderInput');
        const addFolderLink = document.getElementById('addFolderLink');

        addFolderInput.addEventListener('input', function () {
            const folderName = addFolderInput.value;

            var url = "@Html.Raw(Url.Action("AddFolder", new { directory =  @Model.Folder, folderName =  "__FOLDERNAME__"}))";

            url = url.replace("__FOLDERNAME__", encodeURIComponent(folderName));

            addFolderLink.setAttribute('href', url);
        });

    </script>

    <style>
        ul {
            list-style-type: none;
        }

        li {
            list-style-type: none;
        }

        .submit-delete {
            text-align: right;
            margin-top: 10px;
            margin-right: 5px;
        }

        a {
            text-decoration: none;
        }
    </style>
}